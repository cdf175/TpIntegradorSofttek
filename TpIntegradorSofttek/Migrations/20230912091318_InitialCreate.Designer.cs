// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TpIntegradorSofttek.DataAcces;

#nullable disable

namespace TpIntegradorSofttek.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230912091318_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TpIntegradorSofttek.Models.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codProyecto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Proyecto", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Direccion = "Malargüe, Mendoza",
                            Estado = 1,
                            Nombre = "Puesto Rojas"
                        },
                        new
                        {
                            Id = 2,
                            Direccion = "Cuenca Neuquina Sur",
                            Estado = 2,
                            Nombre = "Bandurria Sur"
                        });
                });

            modelBuilder.Entity("TpIntegradorSofttek.Models.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codServicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime");

                    b.Property<decimal>("ValorHora")
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("Id");

                    b.ToTable("Servicio", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descr = "Construccion torre petrolera",
                            Estado = true,
                            ValorHora = 40000m
                        },
                        new
                        {
                            Id = 2,
                            Descr = "Refinamiento petroleo",
                            Estado = true,
                            ValorHora = 25000m
                        });
                });

            modelBuilder.Entity("TpIntegradorSofttek.Models.Trabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codTrabajo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CantHoras")
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(12,2)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("int")
                        .HasColumnName("codProyecto");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int")
                        .HasColumnName("codServicio");

                    b.Property<decimal>("ValorHora")
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("ServicioId");

                    b.ToTable("Trabajo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CantHoras = 700,
                            Costo = 49000000m,
                            Fecha = new DateTime(2023, 9, 12, 6, 13, 18, 715, DateTimeKind.Local).AddTicks(1076),
                            ProyectoId = 1,
                            ServicioId = 1,
                            ValorHora = 70000m
                        },
                        new
                        {
                            Id = 2,
                            CantHoras = 820,
                            Costo = 58220000m,
                            Fecha = new DateTime(2023, 9, 12, 6, 13, 18, 715, DateTimeKind.Local).AddTicks(1087),
                            ProyectoId = 2,
                            ServicioId = 1,
                            ValorHora = 71000m
                        });
                });

            modelBuilder.Entity("TpIntegradorSofttek.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clave = "123456",
                            Dni = 1111,
                            Email = "admin@gmail.com",
                            Nombre = "Admin",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 2,
                            Clave = "123456",
                            Dni = 2222,
                            Email = "test@gmail.com",
                            Nombre = "Test",
                            Tipo = 2
                        });
                });

            modelBuilder.Entity("TpIntegradorSofttek.Models.Trabajo", b =>
                {
                    b.HasOne("TpIntegradorSofttek.Models.Proyecto", "Proyecto")
                        .WithMany("Trabajos")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TpIntegradorSofttek.Models.Servicio", "Servicio")
                        .WithMany("Trabajos")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("TpIntegradorSofttek.Models.Proyecto", b =>
                {
                    b.Navigation("Trabajos");
                });

            modelBuilder.Entity("TpIntegradorSofttek.Models.Servicio", b =>
                {
                    b.Navigation("Trabajos");
                });
#pragma warning restore 612, 618
        }
    }
}
