// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TpIntegradorSofttek.DataAcces;

#nullable disable

namespace TpIntegradorSofttek.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230916003518_renameClass")]
    partial class renameClass
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TpIntegradorSofttek.Models.Proyect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codProyecto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Direccion");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaBaja");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nombre");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("Estado");

                    b.HasKey("Id");

                    b.ToTable("Proyecto", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Malargüe, Mendoza",
                            Name = "Puesto Rojas",
                            State = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "Cuenca Neuquina Sur",
                            Name = "Bandurria Sur",
                            State = 2
                        });
                });

            modelBuilder.Entity("TpIntegradorSofttek.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codServicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Descr");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaBaja");

                    b.Property<decimal>("HourValue")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("ValorHora");

                    b.Property<bool>("State")
                        .HasColumnType("bit")
                        .HasColumnName("Estado");

                    b.HasKey("Id");

                    b.ToTable("Servicio", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Construccion torre petrolera",
                            HourValue = 40000m,
                            State = true
                        },
                        new
                        {
                            Id = 2,
                            Description = "Refinamiento petroleo",
                            HourValue = 25000m,
                            State = true
                        });
                });

            modelBuilder.Entity("TpIntegradorSofttek.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaBaja");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Contrasena");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dni = 1111,
                            Email = "admin@gmail.com",
                            Name = "Admin",
                            Password = "123456",
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Dni = 2222,
                            Email = "test@gmail.com",
                            Name = "Test",
                            Password = "123456",
                            Type = 2
                        });
                });

            modelBuilder.Entity("TpIntegradorSofttek.Models.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codTrabajo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("Costo");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaBaja");

                    b.Property<int>("HourQuantity")
                        .HasColumnType("int")
                        .HasColumnName("CantHoras");

                    b.Property<decimal>("HourValue")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("ValorHora");

                    b.Property<int>("ProyectId")
                        .HasColumnType("int")
                        .HasColumnName("codProyecto");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("codServicio");

                    b.HasKey("Id");

                    b.HasIndex("ProyectId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Trabajo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 49000000m,
                            Date = new DateTime(2023, 9, 15, 21, 35, 17, 695, DateTimeKind.Local).AddTicks(4940),
                            HourQuantity = 700,
                            HourValue = 70000m,
                            ProyectId = 1,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Cost = 58220000m,
                            Date = new DateTime(2023, 9, 15, 21, 35, 17, 695, DateTimeKind.Local).AddTicks(4951),
                            HourQuantity = 820,
                            HourValue = 71000m,
                            ProyectId = 2,
                            ServiceId = 1
                        });
                });

            modelBuilder.Entity("TpIntegradorSofttek.Models.Work", b =>
                {
                    b.HasOne("TpIntegradorSofttek.Models.Proyect", "Proyect")
                        .WithMany("Works")
                        .HasForeignKey("ProyectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TpIntegradorSofttek.Models.Service", "Service")
                        .WithMany("Works")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyect");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("TpIntegradorSofttek.Models.Proyect", b =>
                {
                    b.Navigation("Works");
                });

            modelBuilder.Entity("TpIntegradorSofttek.Models.Service", b =>
                {
                    b.Navigation("Works");
                });
#pragma warning restore 612, 618
        }
    }
}
